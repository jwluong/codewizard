console.log('calling update.js.erb')

var show_area = document.getElementById('show_area');
var result = document.getElementById('result');
var chara = document.getElementById('chara');
var char_status = document.getElementById('status');
var fire = document.getElementById('fire');

console.log(show_area)
var status = "<%= @status %>";
console.log(status);
console.log(chara);
console.log(chara.style);

var disappear = (object) => {
  console.log("in disappear");
  object.style.visibility = "hidden";
  console.log(object.style.visibility);
}

var show = (object) => {
  console.log("in show");
  object.style.visibility = "visible";
  console.log(object.style.visibility);
}

var next_question = () => {
  show_area.innerHTML = '<%= j render "questions/show", question: @level.questions[@progress + 1], addBackground: @addBackground %>';
};

var stayhere = () => {
    show_area.innerHTML = '<%= j render "questions/show", question: @level.questions[@progress], addBackground: @addBackground %>';
};

var update_status = () => {
  console.log("in the update method");
  console.log(char_status);
    char_status.innerHTML = '<%= j render "characters/status" %>';
};

var char_attack = (attack_img) => {
  var id = setInterval(frame, 10);
  var pos = 0;
    function frame() {
      if (pos == 350) {
        clearInterval(id);
      } else {
        pos += 5;
        attack_img.style.top = pos + 'px';
        attack_img.style.left = pos + 'px';
      }
    }
};
//delay+promise///////////////////////////////////////////////////////////
var delay = (ms) => new Promise(
  (resolve) => setTimeout(resolve, ms)
);

var hurt = (object) => {
  var delay_time = 100;
  delay(1)
    .then(() => {
      disappear(object);
      return delay(delay_time);
    })
    .then(() => {
      show(object);
      return delay(delay_time);
    }).then(() => {
      disappear(object);
      return delay(delay_time);
    })
    .then(() => {
      show(object);
      return delay(delay_time);
    }).then(() => {
      disappear(object);
      return delay(delay_time);
    })
    .then(() => {
      show(object);
      return delay(delay_time);
    });
};
/////////////////////////////////////////////////////////////


switch(status) {
  case "next":
    console.log("next");
    delay(1)
    .then(() => {
      char_attack(fire);
      return delay(700);
    }).then(() => {
      next_question();
      return delay(1);
    })

    break;
  case "result":
    console.log("result");
    result.innerHTML = '<%= j render "gamecontrols/result", addBackground: @addBackground %>';
    break;
  case "stay":
    console.log("stay");

    // show_area.innerHTML = '<%= j render "questions/show", question: @level.questions[@progress], addBackground: @addBackground %>';
    delay(1)
    .then(() => {
      hurt(chara);
      return delay(700);
    }).then(() => {
      stayhere();
      return delay(1);
    }).then(() => {
      update_status();
      return delay(1); });
    break;
  case "town":
    console.log("town");
    result.innerHTML = '<%= j render "gamecontrols/hint", level: @level, addBackground: @addBackground %>';
    break;
}

